# Generated by Django 3.2 on 2022-12-08 19:45

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('card_number', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Food',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Наименование блюдо')),
                ('start_price', models.IntegerField(verbose_name='Изначальная стоимость')),
                ('type_of_cuisine', models.CharField(max_length=20, verbose_name='Тип кухни')),
                ('calories', models.IntegerField(verbose_name='Колл-во каллорий')),
            ],
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('extra_price', models.IntegerField(verbose_name='Надбавка стоимости')),
                ('calories', models.IntegerField(verbose_name='Колл-во каллорий')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('password', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('position', models.CharField(max_length=128)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='restaurant.user')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vegetarian', models.BooleanField(default=False, verbose_name='Вегетарианская')),
                ('food_status', models.CharField(max_length=20)),
                ('final_price', models.IntegerField(default=0)),
                ('order_date_time', models.DateField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant.client')),
                ('food', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant.food')),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant.ingredient')),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant.worker')),
            ],
        ),
        migrations.AddField(
            model_name='food',
            name='dishes',
            field=models.ManyToManyField(through='restaurant.Order', to='restaurant.Ingredient'),
        ),
        migrations.AddField(
            model_name='client',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='restaurant.user'),
        ),
        migrations.CreateModel(
            name='ProxyOrder',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('restaurant.order',),
        ),
    ]
